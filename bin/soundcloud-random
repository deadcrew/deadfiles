#!/bin/bash

set -euo pipefail

:parse-opts() {
    local _args=$1

    shift 1

    eval $_args=\$@
}

:usage() {
        cat <<HELP
Usage:
    random-soundcloud <url>

Examples:
    $ random-soundcloud http://url.to/plain/text/file/artists.txt
        > will get one random string from artists.txt, which will be used
        > as search pattern for soundcloud search page and open new browser tab
        > with soundcloud search page
        > file should contain artists names, otherwise all this stuff will not
        > make any sense

Options:
    <url>  URL to text file with one-per-line strings
HELP

}

:get-random-string() {
    local url=$1

    local file_content=$(
        curl -qf $url 2>/dev/null
    )

    if [[ -z $file_content ]]; then
        exit
    fi

    IFS=$'\n' read -d $'\0' -r -a strings <<< "$file_content"

    echo ${strings[$RANDOM % ${#strings[@]}]} | tr ' ' '+'
}

:main() {
    local args=()

    :parse-opts args "${@}"

    set -- ${args[@]}

    if [ $# -eq 0 ]; then
        :usage

        exit 1
    fi

    query=$(:get-random-string $1)
    if [[ -z $query ]]; then
        echo fail to get artists list

        exit 1
    fi

    local url_format="https://soundcloud.com/search?q=%s"

    local url=$(printf $url_format $query)

    nohup i3-sensible-browser $url > /dev/null 2>&1 &
}

:main "${@}"
