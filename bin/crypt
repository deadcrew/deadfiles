#!/bin/bash

### crypt â€” encrypted device helper.
###
### Usage:
###     crypt [-O]
###     crypt -C
###     crypt -h | --help
###
### Options:
###     -O  Autodetect and open encrypted device.
###     -C  Close previously opened encryped device

source /usr/share/bash/opts/opts.bash

set -euo pipefail

:main() {
    local disk
    local path

    local -A opts
    local -a args

    opts:parse opts args -O: -C -h --help -- "$@"

    if [[ "${opts[-h]:-}" || "${opts[--help]:-}" ]]; then
        :help
        exit 0
    fi

    disk="${opts[-O]:-}"
    path="$disk"
    if [[ ! "${path:-}" ]]; then
        for disk in /dev/disk/by-path/*; do
            if sudo cryptsetup isLuks "$disk"; then
                path=$(readlink -f "$disk")
                break
            fi
        done
    fi

    if [[ ! "${path:-}" ]]; then
        :info 'Encrypted device not found.'
        exit 1
    fi

    local name=$(md5sum <<< $disk | awk '{print $1}')
    local target="/mnt/crypt-$name"

    if [[ "${opts[-C]:-}" ]]; then
        :close "$name"

        exit 0
    fi

    :info "Device: $name"

    if findmnt "$target" > /dev/null; then
        local link="$(:get-link "$target")"
        if [[ "$link" ]]; then
            :shell "$link"
        else
            :shell "$target"
        fi
    fi

    sudo cryptsetup open "$path" "$name"

    sudo mkdir -p "$target"

    sudo mount "/dev/mapper/$name" "$target"

    local link="$(:get-link "$target")"
    if [[ "$link" ]]; then
        :link "$target" "$link"

        target="$link"
    fi

    :shell "$target"
}

:help() {
    sed -rn 's/^### ?//;T;p' "$0"
}


:info() {
    echo "$(highlight bold)$*$(highlight reset)"
}

:debug() {
    echo "$*"
}

:get-link() {
    local target=$1

    if [[ -f "$target/.link" ]]; then
        cat "$target/.link"
    fi
}

:link() {
    local target=$1
    local link=$2

    if [[ -e "$link" ]]; then
        sudo unlink "$link"
        sudo rm -f "$link"
    fi

    sudo ln -s "$target" "$link"
}

:shell() {
    local dir=$1

    :info 'Starting shell at encrypted device.'

    cd "$dir" && exec $SHELL -i
}

:close() {
    local name=$1

    local mountpoint="/dev/mapper/$name"

    if [[ ! -e "$mountpoint" ]]; then
        printf "Encrypted device is not opened.\n"

        exit 1
    fi

    local pids=$(lsof -Fpc "$mountpoint" | grep -Po 'p\K\d+')

    if [[ "$pids" ]]; then
        printf "Device is busy, because it's used by following PIDs:\n\n"

        ps -o user,pid,start,command f $pids

        printf "\nDo you want to kill them before umount? [Y/n] "

        local answer

        read answer

        if [[ "${answer:-Y}" == "Y" ]]; then
            kill -1 $pids

            while kill -0 $pids 2>/dev/null; do
                sleep 0.5
            done
        fi
    fi

    sudo umount "$mountpoint"
    sudo cryptsetup close "$name"
}

:main "$@"
