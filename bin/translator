#!/bin/bash

HISTORY=~/.engrus_history

:main() {
    if (( $# )); then
        local input=$*
    else
        local input=$(modal -input /dev/null -no-fixed-num-lines -sync <&-)
    fi

    if [[ "$input" == "" ]]; then
        exit 1
    fi

    local input_lang="en-ru"
    if ! grep -qiE '[a-z]' <<< "$input"; then
        input_lang="ru-en"
    fi

    if ! :dictionary:lookup "$input" "$input_lang"; then
        if ! :translate "$input" "$input_lang"; then
            modal \
                -color-window "#ff0000 #ff0000" \
                -color-normal "#ff0000, #ffffff, #ff0000, #ff0000" \
                -e "$input: no translation found"
            return 1
        fi
    fi \
        | while read result; do
            :history:add "$input" "$result"
        done
}

:dictionary:lookup() {
    local input="$1"
    local input_lang=$2

    local out=$(runki --dry --json --lang $input_lang 2>/dev/null <<< "$input")
    if [[ ! "$out" ]]; then
        return 1
    fi

    local transcription=$(jq -r '.transcript' <<< "$out")

    local length=$(jq -r '.meanings | length' <<< "$out")
    if (( "$length" > 7 )); then
        length=7
    fi

    local meanings=$(jq <<< "$out" \
        '.meanings | .[] | {title: .translation, item: .references | join(", ")}' \
            | jq -s . \
            | tee /dev/stderr)

    modal-template <<< "$meanings" \
        --args "-lines $length" \
        --no-description \
        --message "<span font=\"Verdana 8\">&#8226; $input &#8212; $transcription</span>"

    printf '%s\n' "$result"
}

:history:add() {
    local input=$1
    local result=$2

    printf '%s\t%s\n' "$input" "$result" >> $HISTORY

}

:translate() {
    local input=$1
    local input_lang=$2

    local response=$(curl --fail -k -s  \
            -d "key=trnsl.1.1.20150807T071843Z.319e163bafb5d806.f17c493a466253265a817c9f96a74db85f6b556b" \
            -d "lang=$input_lang" \
            --data-urlencode "text=$input" \
            -G "https://translate.yandex.net/api/v1.5/tr.json/translate"
    )
    if [[ ! "$response" ]]; then
        echo "request to translate.yandex.net failed" >&2
        exit 1
    fi

    local result="$(jq -r '.text[0]' <<< "$response")"

    if [[ "$result" == "$input" ]]; then
        return 1
    fi

    modal-message "$input"$'\n\nâ€º '"$result"

    printf '%s\n' "$result"
}

:main "$@"
