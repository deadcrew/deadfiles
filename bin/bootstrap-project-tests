#!/bin/bash

_verbose=false

:usage() {
    cat <<HELP
Will setup basic test-runner for current project.

Usage:
    $0 [-v]
HELP
}

:exec() {
    local stdin_debug="2"

    {
        if "$_verbose"; then
            printf "$ %s\n" "${*}" >&2
        else
            exec {stdin_debug}<> /dev/null
        fi

        "${@}"
    } < <(tee >(cat >& ${stdin_debug}) < /dev/stdin 2> /dev/null)
}

:main() {
    if [[ "$1" = "-h" || "$1" = "--help" ]]; then
        :usage

        exit 1
    fi

    if [[ "$1" = "-v" ]]; then
        _verbose=true
    fi

    if [ ! -d tests/testcases ]; then
        :exec mkdir -p tests/testcases
    fi

    if [ ! -f tests/setup.sh ]; then
        :exec touch tests/setup.sh
    fi

    if [ ! -f tests/teardown.sh ]; then
        :exec touch tests/teardown.sh
    fi

    if [ ! -f tests/run_tests ]; then
        :exec cat > tests/run_tests <<RUN_TESTS
#!/bin/bash

set -euo pipefail

cd "\$(dirname "\$(readlink -f "\${BASH_SOURCE[0]}")")"
source ../vendor/github.com/reconquest/import.bash/import.bash

import:use "github.com/reconquest/test-runner.bash"

:cleanup() {
    :
}

:main() {
    trap :cleanup EXIT

    cd ..

    test-runner:set-local-setup tests/setup.sh
    test-runner:set-local-teardown tests/teardown.sh
    test-runner:set-testcases-dir tests/testcases

    test-runner:run "\${@}"
}

:main "\${@}"
RUN_TESTS

        chmod +x tests/run_tests
    fi

    if [[ ! -f Makefile ]]; then
        :exec cat > Makefile <<MAKEFILE
vendor/%/Makefile:
    bash -c 'source vendor/github.com/reconquest/import.bash/import.bash && \\
		import:use "\$*"'

include vendor/github.com/reconquest/test-runner.bash/Makefile
MAKEFILE
    fi

    if [ ! -d vendor/github.com/reconquest/import.bash ]; then
        git submodule add https://github.com/reconquest/import.bash \
            vendor/github.com/reconquest/import.bash
    fi

    ./tests/run_tests -h > /dev/null

    if [[ ! -f .gitignore ]] || ! grep -qFx ".last-testcase" .gitignore; then
        :exec echo ".last-testcase" >> .gitignore
    fi

    if [[ ! -f .gitignore ]] || ! grep -qFx ".cover" .gitignore; then
        :exec echo ".cover" >> .gitignore
    fi

    if [ ! -f vendor/.gitignore ]; then
        :exec find vendor -mindepth 3 -maxdepth 3 \
            | grep -v import.bash \
            | sed -r 's/^vendor//' > vendor/.gitignore
    fi

    :exec tags-sh
}

:main "${@}"
