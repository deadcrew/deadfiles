#!/bin/zsh

:main() {
    local arg
    local context
    local args=()
    local entity
    local namespace
    local all_namespaces

    local arg_namespace

    for (( i = 1; i <= $#; i ++ )); do
        arg=${@:$i:1}

        if [[ "$arg" =~ ^--context ]]; then
            context=${arg:9}

            if [[ ! "$context" ]]; then
                (( i++ ))
                context=${@:$i:1}
            fi

            continue
        fi

        if [[ "$arg" =~ ^-n ]]; then
            namespace=${arg:2}

            if [[ ! "$namespace" ]]; then
                (( i++ ))
                namespace=${@:$i:1}
            fi

            continue
        fi

        if [[ "$arg" =~ ^--namespace ]]; then
            namespace=${arg:12}

            if [[ ! "$namespace" ]]; then
                (( i++ ))
                namespace=${@:$i:1}
            fi

            continue
        fi

        if [[ "$arg" =~ \\+.* ]]; then
            if [[ "${arg:1}" == "+" ]]; then
                all_namespaces=true
            else
                arg_namespace="${arg:1}"
            fi

            continue
        fi

        if [[ ! "$context" && "$arg" =~ ^@.* ]]; then
            context=$(
                :kubectl config get-contexts --no-headers -o name \
                    | grep -F "${arg:1}"
            )

            continue
        fi

        args+=("$arg")
    done

    if [[ "$arg_namespace" ]]; then
        namespace=$(
            :kubectl --context=$context get namespaces --no-headers -o name \
                | grep -F "${arg_namespace}" \
                | cut -f2 -d/
        )
    fi

    if [[ ! "$context" ]]; then
        context=$(:kubectl config current-context)

        if [[ ! "$context" ]]; then
            printf ":: no matching context found\n" >&2
            return 1
        fi

        printf ":: @ %s\n" "$context" >&2
    fi

    if [[ "$namespace" ]]; then
        printf ":: + %s\n" "$namespace" >&2
    fi

    if [[ "$all_namespaces" ]]; then
        printf ":: + all namespaces\n" >&2
    fi

    set -- "${args[@]}"

    args=()
    targets=()

    for arg in "$@"; do
        if [[ "$arg" =~ %.* ]]; then
            entity=${arg%/*}

            if [[ "$entity" == "$arg" ]]; then
                entity=pod
            fi

            matching="${${${arg:1}#*/}//\%}"
            items=$(
                :kubectl \
                    ${namespace:+--namespace=$namespace} \
                    ${all_namespaces:+--all-namespaces} \
                    --context=$context get "$entity" --no-headers \
                            -o custom-columns=name:.metadata.name,phase:.status.phase \
                        | awk '$2 != "Terminating" { print $1 }' \
                        | cut -f2- -d/ \
                        | grep -P "$matching" \
                        | paste -sd ' '
            )

            items=(${(s/ /)items})

            if [[ ! "$items" ]]; then
                printf ":: no matching items $entity found for '%s'\n" "$matching" >&2
                return 1
            else
                for item in "${items[@]}"; do
                    printf ":: %% %s\n" "${item}"
                done
            fi

            if [[ "$entity" != "pod" ]]; then
                args+=("$entity")
            fi

            args+=($items)
        else
            args+=("$arg")
        fi
    done

    :kubectl --context=$context \
        ${namespace:+--namespace=$namespace} \
        "${args[@]}" \
        ${all_namespaces:+--all-namespaces}
}

:kubectl() {
    if ${kubectl_debug:-false}; then
        echo ":: /usr/bin/kubectl ${@}" >&2
    fi

    /usr/bin/kubectl "$@"
}

:main "$@"
