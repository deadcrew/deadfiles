#!/bin/bash

### carcosa-ui: interactive picker for carcosa.
###
### Usage:
###     carcosa-ui [--mode=] [--prefix=] [<repo>[:<name>]]...
###     carcosa-ui --help
###
### Options:
###     --help
###     --mode=<mode>     Mode to work in:
###                        * password - paste password;
###                        * login-password - paste login and password;
###     --prefix=<prefix> Filter out only tokens that starts with given prefix.
###     --no-sync         Disable background sync.


set -euo pipefail

source /usr/share/bash/opts/opts.bash

:main() {
    declare -a args
    declare -A opts

    opts:parse opts args \
        --help --mode: --prefix: --no-sync -- "${@}"

    if [[ "${opts[--help]:-}" ]]; then
        :help
        exit 1
    fi

    local mode="${opts[--mode]:-password}"

    declare -A repos=()

    :repos repos "${args[@]:1}"

    local tokens=$()

    local template
    if (( "${#repos[@]}" > 1 )); then
        template='<b>\(.name)</b>&#x20;\(.token)'
    else
        template='\(.name)'
    fi

    local prefix="${opts[--prefix]:-}"

    local active_window_id=$(xdotool getwindowfocus)
    local mouse_location=$(
        xdotool getmouselocation | cut -f-2 -d' ' | tr -d 'xy:'
    )

    local token=$(
        :list repos "${opts[--prefix]:-}" "${opts[--no-sync]:-false}" \
            | sort \
            | :json \
            | modal-template --template "$template" \
            | perl -p -e 'chomp if eof'
    )

    if [[ ! "$token" ]]; then
        return 1
    fi

    if (( "${#repos[@]}" > 1 )); then
        IFS=' ' read -r repo token <<< "$token"

        if [[ ! "${repos[$repo]:-}" ]]; then
            return 2
        fi
    else
        for repo in ${!repos[@]}; do :; done
    fi

    if [[ "$prefix" ]]; then
        token=$prefix$token
    fi

    xwininfo -id "$active_window_id" -tree || {
        notify-send "carcosa-ui" "no active window found"
        exit 1
    }

    #child_window_id=$(
    #    xwininfo -id "$active_window_id" -tree \
    #        #| grep -Pv '1x1' \
    #        | grep -P '\d+ children:' -A1 \
    #        | tail -n1 \
    #        | awk '{ print $1 }' || true
    #)

    :use "$mode" "$token" "${repos[$repo]}" \
        "${child_window_id:-$active_window_id}"
}

:json() {
    while IFS=' ' read -r name token; do
        jo name=$name token=$token
    done | jo -a
}

:help() {
    sed -rn 's/^### ?//;T;p' "$0"
}

:type() {
    perl -p -e 'chomp if eof' \
        | tr '\n' ' ' \
        | xdotool type --clearmodifiers --delay 1 --file -
}

:type:key() {
    xdotool \
        keyup --clearmodifiers "$1" \
        key --clearmodifiers "$1"
}

:list() {
    local -n _repos=$1
    local prefix=$2
    local nosync=$3

    local path
    local name
    for repo in "${!_repos[@]}"; do
        name=$repo
        path=${repos[$name]}

        if ! carcosa -Fc -p "$path"; then
            notify-send "carcosa-ui" "no master password cache for $path"
            exit 1
        fi

        if [[ ! $nosync ]]; then
            if [[ "$_LOCK" == "x" ]]; then
                :sync "${path}"
            fi
        fi

        carcosa -Lc -p "$path" | \
            if [[ "${prefix:-}" ]]; then
                grep -oP "^$prefix\K.*";
            else
                cat
            fi | \
            if (( "${#_repos[@]}" > 1 )); then
                sed -re "s/^/$name /"
            else
                cat
            fi
    done
}

:sync() {
    carcosa -S -p "${path}" >/dev/null 2>&1 <&- &
}

:repos() {
    local -n result=$1 ; shift

    local name
    local path

    for repo in "${@}"; do
        IFS=: read -r path name <<< "$repo"

        if [[ ! "${name}" ]]; then
            name=$(basename "$path")
        fi

        if [[ "${path:0:1}" == "~" ]]; then
            path="$HOME${path:1}"
        fi

        if [[ ! -d "${path}" ]]; then
            notify-send "carcosa-ui" "$path does not exist."
            exit 1
        fi

        result[$name]=$path
    done
}

:use() {
    local mode=$1
    local token=$2
    local path=$3
    local active_window_id=$4

    if local output=$(carcosa -Gc "$token" -p "$path"); then
        local password=$output

        if [[ "$mode" == "clipboard" ]]; then
            xclip -i -selection primary <<< "$password"
            xclip -i -selection clipboard <<< "$password"
            return
        fi

        xdotool \
            windowfocus --sync "$active_window_id"

        local enter=true
        if [[ "$mode" == "login-password" ]]; then
            local login=${token##*/}

            if [[ "$login" != "$token" ]]; then
                if [[ ${login:0:1} == "!" ]]; then
                    login=${login:1}
                    enter=false
                fi

                if [[ "$login" ]]; then
                    :type <<< "$login"
                    :type:key "Tab"
                fi
            fi
        fi


        :type <<< "$password"

        if $enter; then
            sleep 0.1
            :type:key "Return"
        fi
    else
        if [ "$output" ]; then
            notify "$output"
        fi
    fi
}

:main "${@:-~/.secrets}"
